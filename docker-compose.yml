name: manekani

x-kratos-common: &kratos-common
  image: oryd/kratos:v1.2.0
  environment:
    - DSN=postgres://kratos:secret@postgres-kratos:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    - LOG_LEVEL=trace
  volumes:
    - type: bind
      source: ./infra/ory/kratos
      target: /etc/config/kratos

x-manekani-common: &manekani-common
  depends_on:
      - postgres-manekani
  build:
    context: ./
    dockerfile: ./docker/Dockerfile
  volumes:
    - type: bind
      source: ./
      target: /usr/src/manekani


services:
  postgres-kratos:
    image: postgres
    restart: on-failure
    networks:
      - auth_infra
    volumes:
      - kratos-postgres:/var/lib/postgresql/data

  kratos-migrate:
    <<: *kratos-common
    depends_on:
      - postgres-kratos
    restart: on-failure
    command: migrate -c /etc/config/kratos/kratos.yml sql -e --yes
    networks:
      - auth_infra

  kratos:
    <<: *kratos-common
    ports:
      - "4433:4433" # public
      - "4434:4434" # admin
    depends_on:
      - kratos-migrate
    restart: on-failure
    command: serve -c /etc/config/kratos/kratos.yml
    networks:
      - auth_infra

  kratos-selfservice-ui-node:
    image: oryd/kratos-selfservice-ui-node:v1.2.0
    restart: on-failure
    environment:
      - KRATOS_PUBLIC_URL=http://kratos:4433/
      - KRATOS_ADMIN_URL=http://kratos:4434
      - HYDRA_ADMIN_URL=http://hydra:4445
      - SECURITY_MODE=standalone
    networks:
      - auth_infra
      - core

  mailslurper:
    image: oryd/mailslurper:latest-smtps
    networks:
      - auth_infra

  postgres-manekani:
    environment:
      POSTGRES_DB: manekani
      POSTGRES_PASSWORD: secret
      POSTGRES_USER: manekani
    image: postgres:16
    networks:
      core: null
    ports:
      - mode: ingress
        target: 5432
        published: "5433"
        protocol: tcp
    restart: on-failure
    volumes:
      - type: volume
        source: manekani-postgres
        target: /var/lib/postgresql/data
        volume: {}

  manekani-migrate:
    <<: *manekani-common
    restart: on-failure
    networks:
      - core

  manekani:
    restart: on-failure
    depends_on:
      - manekani-migrate
    build:
      context: ./
    volumes:
      - type: bind
        source: ./
        target: /usr/src/manekani
    networks:
      - core
      - auth_infra
      - other
  manekani-ums:
    restart: on-failure
    depends_on:
      - manekani-migrate
    build:
      context: ./services/user-management
      dockerfile: ./Dockerfile
    volumes:
      - type: bind
        source: ./services/user-management
        target: /usr/src/manekani-ums
    networks:
      - core
      - auth_infra
      - other

networks:
  core:
  auth_infra:
  other:

volumes:
  kratos-postgres:
    name: manekani_kratos-postgres
  manekani-postgres:
    name: manekani_manekani-postgres
