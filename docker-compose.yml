version: "3"

# THIS COMPOSE FILE IS MEANT FOR DEVELOPMENT.
# DON'T PUT ANY SENSITIVE DATA HERE!

services:
  minio:
    image: quay.io/minio/minio:latest
    container_name: manekani-minio
    hostname: minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    expose:
      - "9000"
      - "9001"
    command: server --console-address ":9001" /data
    volumes:
      - /home/sixels/.manekani/minio:/data

  postgres:
    image: postgres:15-alpine
    container_name: manekani-postgres
    hostname: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: sixels
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: manekani
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready -U sixels"]
      interval: 5s
      timeout: 5s
      retries: 5

  # supertokens can be used to authenticate multiple clients,
  # we don't ant to keep wit on the same manekani database
  auth-db:
    image: postgres:15-alpine
    container_name: auth-db
    hostname: auth-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: sixels
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: supertokens
    expose:
      - "5432"
    volumes:
      - auth-volume:/var/lib/postgresql/data

  supertokens:
    container_name: auth-supertokens
    image: registry.supertokens.io/supertokens/supertokens-postgresql
    hostname: supertokens
    depends_on:
      - auth-db
    expose:
      - "3567"
    environment:
      POSTGRESQL_CONNECTION_URI: "postgresql://sixels:123@auth-db/supertokens"
      API_KEYS: "60f98a9e-ce60-48c2-bfa2-8c4f623874af"
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

  manekani:
    container_name: manekani-backend
    hostname: manekani
    restart: unless-stopped
    environment:
      MANEKANI_DATA_HOME: /data
      MANEKANI_S3_URL: "minio:9000"
      MANEKANI_DB_URL: "postgres://sixels:123@postgres/manekani"
      AWS_ACCESS_KEY_ID: Kz31iB793qov0cTW
      AWS_SECRET_ACCESS_KEY: jKyin9lWVio2tCIDXu0JHr3a1zfcPQ78
      KEYCLOAK_CLIENT_ID: manekani-backend
      KEYCLOAK_CLIENT_SECRET: Zzmv9gFDHs5YOuL7ajfvhX5vERFVzyAs
      KEYCLOAK_URL: "http://keycloak:9100"
      KEYCLOAK_REALM: manekani
      REDIS_URL: "http://redis:6379"
      REDIS_PASSWORD: "123"
    # env_file:
    #   - ./backend/.env
    ports:
      - "8081:8081"
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - keycloak
      - minio
      - postgres
    volumes:
      - /home/sixels/.manekani:/data
      - ./backend:/app/manekani

  nginx:
    image: nginx:alpine
    container_name: manekani-nginx
    hostname: nginx
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
      - "3567:3567"
      # - "8081:8081"
    depends_on:
      - minio
      - supertokens
      # - manekani

volumes:
  redis-session:
    driver: local
  auth-volume:
    driver: local
