version: "3"

# using nginx reverse proxy, load balancing, you can access
# it through port 9000.

services:
  minio:
    image: minio/minio
    container_name: manekani-minio
    hostname: minio
    restart: always
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000"
      - "9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    command: server --console-address ":9001" /data
    volumes:
      - minio-data:/data

  postgres:
    image: postgres:15-alpine
    container_name: manekani-postgres
    hostname: postgres
    restart: always
    environment:
      - POSTGRES_USER=sixels
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=manekani
    expose:
      - "5432"

  manekani:
    container_name: manekani-backend
    hostname: manekani
    restart: always
    environment:
      - MANEKANI_DB_URL=postgres://sixels:123@postgres/manekani
    env_file:
      - ./backend/.env
    ports:
      - "8081"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 5s
      retries: 5
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - minio
    links:
      - postgres
    volumes:
      - ./backend:/app/manekani

  nginx:
    image: nginx:alpine
    container_name: manekani-nginx
    hostname: nginx
    restart: on-failure
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
      - "8081:8081"
    depends_on:
      - minio
      - manekani

volumes:
  minio-data:
    driver: local
    driver_opts:
      type: "none"
      o: "bind"
      device: "/home/sixels/.minio"
