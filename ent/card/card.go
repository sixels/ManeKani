// Code generated by ent, DO NOT EDIT.

package card

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the card type in the database.
	Label = "card"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldProgress holds the string denoting the progress field in the database.
	FieldProgress = "progress"
	// FieldTotalErrors holds the string denoting the total_errors field in the database.
	FieldTotalErrors = "total_errors"
	// FieldUnlockedAt holds the string denoting the unlocked_at field in the database.
	FieldUnlockedAt = "unlocked_at"
	// FieldStartedAt holds the string denoting the started_at field in the database.
	FieldStartedAt = "started_at"
	// FieldPassedAt holds the string denoting the passed_at field in the database.
	FieldPassedAt = "passed_at"
	// FieldAvailableAt holds the string denoting the available_at field in the database.
	FieldAvailableAt = "available_at"
	// FieldBurnedAt holds the string denoting the burned_at field in the database.
	FieldBurnedAt = "burned_at"
	// EdgeDeckProgress holds the string denoting the deck_progress edge name in mutations.
	EdgeDeckProgress = "deck_progress"
	// EdgeSubject holds the string denoting the subject edge name in mutations.
	EdgeSubject = "subject"
	// EdgeReviews holds the string denoting the reviews edge name in mutations.
	EdgeReviews = "reviews"
	// Table holds the table name of the card in the database.
	Table = "cards"
	// DeckProgressTable is the table that holds the deck_progress relation/edge.
	DeckProgressTable = "cards"
	// DeckProgressInverseTable is the table name for the DeckProgress entity.
	// It exists in this package in order to avoid circular dependency with the "deckprogress" package.
	DeckProgressInverseTable = "deck_progresses"
	// DeckProgressColumn is the table column denoting the deck_progress relation/edge.
	DeckProgressColumn = "deck_progress_cards"
	// SubjectTable is the table that holds the subject relation/edge.
	SubjectTable = "cards"
	// SubjectInverseTable is the table name for the Subject entity.
	// It exists in this package in order to avoid circular dependency with the "subject" package.
	SubjectInverseTable = "subjects"
	// SubjectColumn is the table column denoting the subject relation/edge.
	SubjectColumn = "subject_cards"
	// ReviewsTable is the table that holds the reviews relation/edge.
	ReviewsTable = "reviews"
	// ReviewsInverseTable is the table name for the Review entity.
	// It exists in this package in order to avoid circular dependency with the "review" package.
	ReviewsInverseTable = "reviews"
	// ReviewsColumn is the table column denoting the reviews relation/edge.
	ReviewsColumn = "card_reviews"
)

// Columns holds all SQL columns for card fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldProgress,
	FieldTotalErrors,
	FieldUnlockedAt,
	FieldStartedAt,
	FieldPassedAt,
	FieldAvailableAt,
	FieldBurnedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "cards"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"deck_progress_cards",
	"subject_cards",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultProgress holds the default value on creation for the "progress" field.
	DefaultProgress uint8
	// DefaultTotalErrors holds the default value on creation for the "total_errors" field.
	DefaultTotalErrors int32
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
