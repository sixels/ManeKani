openapi: 3.0.1
info:
  title: ManeKani API
  description: ManeKani API.
  # termsOfService: http://swagger.io/terms/
  # contact:
  #   name: API Support
  #   url: http://www.swagger.io/support
  #   email: sixels@protonmail.com
  # license:
  #   name: Apache 2.0
  #   url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: "1.0"
servers:
  - url: http://127.0.0.1:8080
tags:
  - name: metric
    description: API health status
  - name: internal
    description: Internal API functionalities
  - name: subject
    description: Subjects API functionalities
  - name: deck
    description: Decks API functionalities
  - name: token
    description: Tokens API functionalities
  - name: user
    description: User related
# paths:
#   /health:
#     get:
#       tags:
#         - metric
#       summary: Check the health status of the server.
#       description: Check the health status of the server.
#       operationId: check-health
#       responses:
#         200:
#           description: OK
#           content:
#             application/json:
#               schema:
#                 type: object
#                 additionalProperties:
#                   type: object
components:
  schemas:
    common.Response:
      type: object
      required:
        - code
        - data
      properties:
        code:
          type: integer
        data:
          type: object
    common.ErrorResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    token.Claims:
      type: object
      properties:
        deck_create:
          type: boolean
        deck_delete:
          type: boolean
        deck_update:
          type: boolean
        review_create:
          type: boolean
        study_material_create:
          type: boolean
        study_material_update:
          type: boolean
        subject_create:
          type: boolean
        subject_delete:
          type: boolean
        subject_update:
          type: boolean
        user_delete:
          type: boolean
        user_update:
          type: boolean
    token.Status:
      type: string
      enum:
        - active
        - frozen
      x-enum-varnames:
        - TokenStatusActive
        - TokenStatusFrozen
    token.CreateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        permissions:
          $ref: "#/components/schemas/token.Claims"
    token.CreateResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        prefix:
          type: string
        token:
          type: string
        claims:
          $ref: "#/components/schemas/token.Claims"
        status:
          $ref: "#/components/schemas/token.Status"
        used_at:
          type: string
    token.GetResponse:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        name:
          type: string
        claims:
          $ref: "#/components/schemas/token.Claims"
        prefix:
          type: string
        status:
          $ref: "#/components/schemas/token.Status"
        used_at:
          type: string
    token.GetAllResponse:
      type: array
      items:
        type: object
        required:
          - id
          - name
          - prefix
          - status
        properties:
          id:
            type: string
          name:
            type: string
          claims:
            $ref: "#/components/schemas/token.Claims"
          prefix:
            type: string
          status:
            $ref: "#/components/schemas/token.Status"
          used_at:
            type: string
  securitySchemes:
    ApiKey:
      type: apiKey
      description: API key authentication
      name: Authorization
      in: header
    Login:
      type: apiKey
      description: Login at http://127.0.0.1:4455/login and copy the contents of the 'ory_kratos_session' cookie
      name: ory_kratos_session
      in: cookie
paths:
  "/auth/validate-token":
    get:
      # x-internal: true
      tags:
        - internal
      summary: Validate a token
      operationId: validate-token
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
  /api/tokens:
    get:
      x-internal: true
      tags:
        - token
      summary: Get all user's API tokens
      description: Get all user's API tokens
      operationId: get-tokens
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/common.Response"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/token.GetAllResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
      security:
        - Login: []
    post:
      x-internal: true
      tags:
        - token
      summary: Create a new API token
      description: Creates a new API token with the given permissions
      operationId: create-token
      requestBody:
        description: The API token options
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/token.CreateRequest"
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/common.Response"
                  - type: object
                    properties:
                      data:
                        $ref: "#/components/schemas/token.CreateResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
      security:
        - Login: []
      x-codegen-request-body-name: request
  /api/tokens/{id}:
    delete:
      x-internal: true
      tags:
        - token
      summary: Delete an API token
      description: Deletes an API token by the given ID
      operationId: delete-token
      parameters:
        - name: id
          in: path
          description: The API token ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.Response"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
      security:
        - Login: []
