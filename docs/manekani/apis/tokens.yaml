paths:
  "/auth/validate-token":
    get:
      # x-internal: true
      tags:
        - internal
      summary: Validate a token
      operationId: validate-token
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"

  /api/tokens:
    get:
      x-internal: true
      tags:
        - token
      summary: Get all user's API tokens
      description: Get all user's API tokens
      operationId: get-tokens
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/token.GetAllResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
      security:
        - Login: []
    post:
      x-internal: true
      tags:
        - token
      summary: Create a new API token
      description: Creates a new API token with the given permissions
      operationId: create-token
      requestBody:
        description: The API token options
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/token.CreateRequest"
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/token.CreateResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
      security:
        - Login: []
      x-codegen-request-body-name: request
  /api/tokens/{id}:
    delete:
      x-internal: true
      tags:
        - token
      summary: Delete an API token
      description: Deletes an API token by the given ID
      operationId: delete-token
      parameters:
        - name: id
          in: path
          description: The API token ID
          required: true
          schema:
            type: string
      responses:
        204:
          description: No Content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/common.ErrorResponse"
      security:
        - Login: []

components:
  schemas:
    token.Claims:
      type: object
      properties:
        deck_create:
          type: boolean
        deck_delete:
          type: boolean
        deck_update:
          type: boolean
        review_create:
          type: boolean
        study_material_create:
          type: boolean
        study_material_update:
          type: boolean
        subject_create:
          type: boolean
        subject_delete:
          type: boolean
        subject_update:
          type: boolean
        user_delete:
          type: boolean
        user_update:
          type: boolean
    token.Status:
      type: string
      enum:
        - active
        - frozen
      x-enum-varnames:
        - TokenStatusActive
        - TokenStatusFrozen

    token.CreateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        permissions:
            $ref: "#/components/schemas/token.Claims"
    token.CreateResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        prefix:
          type: string
        claims:
          $ref: "#/components/schemas/token.Claims"
        status:
          $ref: "#/components/schemas/token.Status"
        used_at:
          type: string
    token.GetResponse:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        name:
          type: string
        claims:
          $ref: "#/components/schemas/token.Claims"
        prefix:
          type: string
        status:
          $ref: "#/components/schemas/token.Status"
        used_at:
          type: string
    token.GetAllResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        claims:
          $ref: "#/components/schemas/token.Claims"
        prefix:
          type: string
        status:
          $ref: "#/components/schemas/token.Status"
        used_at:
          type: string
