basePath: /
definitions:
  cards.ContentMeta:
    properties:
      attachment:
        type: integer
      content_type:
        type: string
      group:
        type: string
      metadata:
        additionalProperties: {}
        type: object
    type: object
  cards.CreateSubjectForm:
    properties:
      data:
        properties:
          complimentary_study_data:
            items:
              additionalProperties:
                type: string
              type: object
            type: array
          deck:
            type: string
          dependencies:
            items:
              type: string
            type: array
          dependents:
            items:
              type: string
            type: array
          kind:
            type: string
          level:
            type: integer
          name:
            type: string
          priority:
            type: integer
          resources:
            additionalProperties:
              items:
                $ref: '#/definitions/cards.RemoteContent'
              type: array
            type: object
          similars:
            items:
              type: string
            type: array
          slug:
            type: string
          study_data:
            items:
              $ref: '#/definitions/cards.StudyData'
            type: array
          value:
            type: string
          value_image:
            $ref: '#/definitions/cards.RemoteContent'
        required:
        - deck
        - level
        - name
        - slug
        type: object
      resource_meta[]:
        items:
          $ref: '#/definitions/cards.ContentMeta'
        type: array
      value_image_meta:
        $ref: '#/definitions/cards.ContentMeta'
    required:
    - data
    type: object
  cards.PartialSubject:
    properties:
      deck:
        type: string
      dependencies:
        items:
          type: string
        type: array
      dependents:
        items:
          type: string
        type: array
      id:
        type: string
      kind:
        type: string
      level:
        type: integer
      name:
        type: string
      owner:
        type: string
      priority:
        type: integer
      similars:
        items:
          type: string
        type: array
      slug:
        type: string
      study_data:
        items:
          $ref: '#/definitions/cards.StudyData'
        type: array
      value:
        type: string
      value_image:
        $ref: '#/definitions/cards.RemoteContent'
    type: object
  cards.RemoteContent:
    properties:
      content_type:
        type: string
      metadata:
        additionalProperties: {}
        type: object
      url:
        type: string
    type: object
  cards.StudyData:
    properties:
      items:
        items:
          $ref: '#/definitions/cards.StudyItem'
        type: array
      kind:
        type: string
      mnemonic:
        type: string
    type: object
  cards.StudyItem:
    properties:
      category:
        type: string
      is_hidden:
        type: boolean
      is_primary:
        type: boolean
      is_valid_answer:
        type: boolean
      resource:
        type: string
      value:
        type: string
    type: object
  cards.Subject:
    properties:
      complimentary_study_data:
        items:
          additionalProperties:
            type: string
          type: object
        type: array
      created_at:
        type: string
      deck:
        type: string
      dependencies:
        items:
          type: string
        type: array
      dependents:
        items:
          type: string
        type: array
      id:
        type: string
      kind:
        type: string
      level:
        type: integer
      name:
        description: e.g. "ground", "一", nil, "一", 2
        type: string
      owner:
        type: string
      priority:
        type: integer
      resources:
        additionalProperties:
          items:
            $ref: '#/definitions/cards.RemoteContent'
          type: array
        type: object
      similars:
        items:
          type: string
        type: array
      slug:
        type: string
      study_data:
        items:
          $ref: '#/definitions/cards.StudyData'
        type: array
      updated_at:
        type: string
      value:
        type: string
      value_image:
        $ref: '#/definitions/cards.RemoteContent'
    type: object
  cards.UpdateSubjectRequest:
    properties:
      complimentary_study_data:
        items:
          additionalProperties:
            type: string
          type: object
        type: array
      dependencies:
        items:
          type: string
        type: array
      dependents:
        items:
          type: string
        type: array
      kind:
        type: string
      level:
        type: integer
      name:
        type: string
      priority:
        type: integer
      resources:
        additionalProperties:
          items:
            $ref: '#/definitions/cards.RemoteContent'
          type: array
        type: object
      similars:
        items:
          type: string
        type: array
      slug:
        type: string
      study_data:
        items:
          $ref: '#/definitions/cards.StudyData'
        type: array
      value:
        type: string
      value_image:
        $ref: '#/definitions/cards.RemoteContent'
    type: object
host: localhost:8081
info:
  contact:
    email: sixels@protonmail.com
    name: API Support
    url: http://www.swagger.io/support
  description: ManeKani API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: ManeKani API
  version: "1.0"
paths:
  /api/v1/subject:
    get:
      consumes:
      - '*/*'
      description: Return a list of all subjects
      operationId: get-subject-all
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/cards.PartialSubject'
            type: array
      summary: Query all subjects
      tags:
      - cards
      - subject
    post:
      consumes:
      - multipart/form-data
      description: Creates a subject with the given values
      operationId: post-subject-create
      parameters:
      - description: The subject to be created
        in: body
        name: subject
        required: true
        schema:
          $ref: '#/definitions/cards.CreateSubjectForm'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/cards.Subject'
      summary: Create a new subject
      tags:
      - cards
      - subject
  /api/v1/subject/{name}:
    delete:
      consumes:
      - '*/*'
      description: Delete a subject by its name
      operationId: delete-subject-delete
      parameters:
      - description: Subject name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a subject
      tags:
      - cards
      - subject
    get:
      consumes:
      - '*/*'
      description: Search a subject by its name
      operationId: get-subject-query
      parameters:
      - description: Subject name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cards.Subject'
      summary: Query a subject
      tags:
      - cards
      - subject
    patch:
      consumes:
      - application/json
      description: Update a subject with the given values
      operationId: patch-subject-update
      parameters:
      - description: Subject name
        in: path
        name: name
        required: true
        type: string
      - description: Subject fields to update
        in: body
        name: subject
        required: true
        schema:
          $ref: '#/definitions/cards.UpdateSubjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cards.Subject'
      summary: Update a subject
      tags:
      - cards
      - subject
  /health:
    get:
      consumes:
      - '*/*'
      description: Get the status of the server.
      operationId: get-health-check
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of the server.
      tags:
      - health
schemes:
- http
swagger: "2.0"
tags:
- description: API status
  name: health
- description: Cards API related
  name: cards
- description: Kanji cards actions
  name: kanji
- description: Radical cards actions
  name: radical
- description: Vocabulary cards actions
  name: vocabulary
