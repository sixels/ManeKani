basePath: /
definitions:
  apicommon.APIResponse-any:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  apicommon.APIResponse-array_tokens_UserTokenPartial:
    properties:
      code:
        type: integer
      data:
        items:
          $ref: '#/definitions/tokens.UserTokenPartial'
        type: array
      message:
        type: string
    type: object
  apicommon.APIResponse-string:
    properties:
      code:
        type: integer
      data:
        type: string
      message:
        type: string
    type: object
  cards.PartialSubject:
    properties:
      deck:
        type: string
      dependencies:
        items:
          type: string
        type: array
      dependents:
        items:
          type: string
        type: array
      id:
        type: string
      kind:
        type: string
      level:
        type: integer
      name:
        type: string
      owner:
        type: string
      priority:
        type: integer
      similars:
        items:
          type: string
        type: array
      slug:
        type: string
      study_data:
        items:
          $ref: '#/definitions/cards.StudyData'
        type: array
      value:
        type: string
      value_image:
        type: string
    type: object
  cards.Resource:
    properties:
      metadata:
        additionalProperties:
          type: string
        type: object
      url:
        type: string
    type: object
  cards.StudyData:
    properties:
      items:
        items:
          $ref: '#/definitions/cards.StudyItem'
        type: array
      kind:
        type: string
      mnemonic:
        type: string
    type: object
  cards.StudyItem:
    properties:
      category:
        type: string
      is_hidden:
        type: boolean
      is_primary:
        type: boolean
      is_valid_answer:
        type: boolean
      resource:
        type: string
      value:
        type: string
    type: object
  cards.Subject:
    properties:
      additional_study_data:
        additionalProperties: {}
        type: object
      created_at:
        type: string
      deck:
        type: string
      dependencies:
        items:
          type: string
        type: array
      dependents:
        items:
          type: string
        type: array
      id:
        type: string
      kind:
        type: string
      level:
        type: integer
      name:
        description: e.g. "ground", "一", nil, "一", 2
        type: string
      owner:
        type: string
      priority:
        type: integer
      resources:
        items:
          $ref: '#/definitions/cards.Resource'
        type: array
      similars:
        items:
          type: string
        type: array
      slug:
        type: string
      study_data:
        items:
          $ref: '#/definitions/cards.StudyData'
        type: array
      updated_at:
        type: string
      value:
        type: string
      value_image:
        type: string
    type: object
  cards.UpdateSubjectRequest:
    properties:
      additional_study_data:
        additionalProperties: {}
        type: object
      dependencies:
        items:
          type: string
        type: array
      dependents:
        items:
          type: string
        type: array
      kind:
        type: string
      level:
        type: integer
      name:
        type: string
      priority:
        type: integer
      resources:
        items:
          $ref: '#/definitions/cards.Resource'
        type: array
      similars:
        items:
          type: string
        type: array
      slug:
        type: string
      study_data:
        items:
          $ref: '#/definitions/cards.StudyData'
        type: array
      value:
        type: string
      value_image:
        type: string
    type: object
  tokens.APITokenCapabilities:
    properties:
      token_capability_review_create:
        type: boolean
      token_capability_study_material_create:
        type: boolean
      token_capability_study_material_update:
        type: boolean
      token_capability_subject_create:
        type: boolean
      token_capability_subject_delete:
        type: boolean
      token_capability_subject_update:
        type: boolean
      token_capability_user_delete:
        type: boolean
      token_capability_user_update:
        type: boolean
      token_capabilty_deck_create:
        type: boolean
      token_capabilty_deck_delete:
        type: boolean
      token_capabilty_deck_update:
        type: boolean
    type: object
  tokens.APITokenClaims:
    properties:
      capabilities:
        $ref: '#/definitions/tokens.APITokenCapabilities'
    type: object
  tokens.GenerateTokenRequest:
    properties:
      name:
        type: string
      permissions:
        $ref: '#/definitions/tokens.APITokenCapabilities'
    type: object
  tokens.UserTokenPartial:
    properties:
      claims:
        $ref: '#/definitions/tokens.APITokenClaims'
      id:
        type: string
      prefix:
        type: string
    type: object
host: 127.0.0.1:8080
info:
  contact:
    email: sixels@protonmail.com
    name: API Support
    url: http://www.swagger.io/support
  description: ManeKani API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: ManeKani API
  version: "1.0"
paths:
  /api/tokens:
    get:
      consumes:
      - '*/*'
      description: Get all user's API tokens
      operationId: get-token-query
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apicommon.APIResponse-array_tokens_UserTokenPartial'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apicommon.APIResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apicommon.APIResponse-any'
      security:
      - Login: []
      summary: Get all user's API tokens
      tags:
      - user
      - tokens
    post:
      consumes:
      - application/json
      description: Creates a new API token with the given permissions
      operationId: post-token-create
      parameters:
      - description: The API token options
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/tokens.GenerateTokenRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/apicommon.APIResponse-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apicommon.APIResponse-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apicommon.APIResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apicommon.APIResponse-any'
      security:
      - Login: []
      summary: Create a new API token
      tags:
      - user
      - tokens
  /api/tokens/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an API token by the given ID
      operationId: delete-token-delete
      parameters:
      - description: The API token ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/apicommon.APIResponse-any'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apicommon.APIResponse-any'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/apicommon.APIResponse-any'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apicommon.APIResponse-any'
      security:
      - Login: []
      summary: Delete an API token
      tags:
      - user
      - tokens
  /api/v1/subject:
    get:
      consumes:
      - '*/*'
      description: Return a list of all subjects
      operationId: get-subject-all
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/cards.PartialSubject'
            type: array
      summary: Query all subjects
      tags:
      - cards
      - subject
  /api/v1/subject/{name}:
    delete:
      consumes:
      - '*/*'
      description: Delete a subject by its name
      operationId: delete-subject-delete
      parameters:
      - description: Subject name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a subject
      tags:
      - cards
      - subject
    get:
      consumes:
      - '*/*'
      description: Search a subject by its name
      operationId: get-subject-query
      parameters:
      - description: Subject name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cards.Subject'
      summary: Query a subject
      tags:
      - cards
      - subject
    patch:
      consumes:
      - application/json
      description: Update a subject with the given values
      operationId: patch-subject-update
      parameters:
      - description: Subject name
        in: path
        name: name
        required: true
        type: string
      - description: Subject fields to update
        in: body
        name: subject
        required: true
        schema:
          $ref: '#/definitions/cards.UpdateSubjectRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cards.Subject'
      summary: Update a subject
      tags:
      - cards
      - subject
  /apiTODO/v1/subject:
    post:
      responses: {}
  /health:
    get:
      consumes:
      - '*/*'
      description: Get the status of the server.
      operationId: get-health-check
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of the server.
      tags:
      - health
schemes:
- http
securityDefinitions:
  ApiKey:
    description: API key authentication
    in: header
    name: Authorization
    type: apiKey
  Login:
    description: Login at http://127.0.0.1:4455/login and copy the contents of the
      'ory_kratos_session' cookie
    in: cookie
    name: ory_kratos_session
    type: apiKey
swagger: "2.0"
tags:
- description: API status
  name: health
- description: Cards API related
  name: cards
- description: Kanji cards actions
  name: kanji
- description: Radical cards actions
  name: radical
- description: Vocabulary cards actions
  name: vocabulary
- description: User related
  name: user
- description: API token related
  name: tokens
